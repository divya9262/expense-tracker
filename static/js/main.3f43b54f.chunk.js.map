{"version":3,"sources":["components/ExpenseDate.js","components/Card.js","components/ExpenseItem.js","components/ExpensesFilter.js","components/ExpenseList.js","components/ChartBar.js","components/Chart.js","components/ExpenseChart.js","components/Expenses.js","components/ExpenseForm.js","components/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMax","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","steps","NewExpense","isEditing","setIsEditing","onClick","enteredExpenseData","random","onAddExpense","onCancel","dummy_expense","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f43b54f.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n\tconst month = props.date.toLocaleString('en-US', {month:'long'});\r\n\tconst day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n     <div className=\"expense-date\">\r\n     <div className=\"expense-date__month\">{month}</div>\r\n     <div className=\"expense-date__year\">{year}</div>\r\n     <div className=\"expense-date__day\">{day}</div>\r\n     </div>\r\n\t\t);\r\n\t\r\n}\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from './Card';\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n\t//useState(); // must be called only inside the function neither outside the function nor  under nested function\r\n\r\n\t// const [title,seTitle]  = useState(props.title);\r\n\r\n\t// function clickHandler(){\r\n\t// \tseTitle('Updated');\r\n //     console.log(title);\r\n\t// }\r\n\treturn (\r\n\t\t<li>\r\n\t\t<Card className='expense-item'>\r\n\r\n       <ExpenseDate date={props.date} />\r\n    <div className = \"expense-item__description\">\r\n    <h2>{props.title}</h2>\r\n    <div className=\"expense-item__price\"> Rs.{props.amount}</div>\r\n    \r\n    </div>\r\n   \r\n    </Card>\r\n    </li>\r\n\t\t);\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n        <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpenseList.css';\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar  = (props) => {\r\n     let barFillHeight = '0%';\r\n\r\n     if(props.maxValue > 0){\r\n      barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n     }\r\n\treturn(\r\n    <div className = 'chart-bar'>\r\n    <div className = 'chart-bar__inner'>\r\n    <div className = 'chart-bar__fill' style={{height: barFillHeight}}></div>\r\n    </div>\r\n    <div className = 'chart-bar__label'>{props.label}</div>\r\n    </div>\r\n\r\n\r\n\r\n\t\t);\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar'; \r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n\tconst dataPointsValues =props.dataPoints.map(dataPoint => dataPoint.value);\r\n\tconst totalMax = Math.max(...dataPointsValues);\r\n\r\n return <div className=\"chart\">\r\n     {props.dataPoints.map((dataPoint) =>( \r\n     \t<ChartBar\r\n     \tkey = {dataPoint.label}\r\n      value={dataPoint.value} \r\n      maxValue={totalMax}\r\n       label={dataPoint.label} />\r\n       ))}\r\n</div>\r\n};\r\n\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart';\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;","import React,{ useState} from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from './Card';\r\nimport './Expenses.css';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseChart from './ExpenseChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpenseChart expenses = {filteredExpenses}/>\r\n          <ExpenseList items={filteredExpenses} />\r\n        }\r\n        \r\n       \r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\n \r\n import './ExpenseForm.css';\r\n\r\n function ExpenseForm (props){\r\n \t const [enteredTitle, setEnteredTitle] = useState('');\r\n    \tconst [enteredAmount, setEnteredAmount] = useState('');\r\n \t const [enteredDate, setEnteredDate] = useState('');\r\n \tfunction titleChangeHandler (event){\r\n     setEnteredTitle(event.target.value);\r\n \t}\r\n \r\n \tfunction amountChangeHandler (event){\r\n     setEnteredAmount(event.target.value);\r\n \t}\r\n \t\r\n \tfunction dateChangeHandler (event){\r\n     setEnteredDate(event.target.value);\r\n \t}\r\n \tconst submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n \treturn(\r\n      <form onSubmit={submitHandler}>\r\n \t\t<div className = 'new-expense__controls'>\r\n \t   <div className='new-expense__control'>\r\n \t   <label>Title</label>\r\n \t   <input type = 'text' value={enteredTitle} onChange={titleChangeHandler}/>\r\n\r\n \t   </div>\r\n \t   <div className='new-expense__control'>\r\n \t   <label>Amount</label>\r\n \t   <input type = 'number' min ='1.00' steps = '1.00' value={enteredAmount} onChange={amountChangeHandler} />\r\n\r\n \t   </div>\r\n \t   <div className='new-expense__control'>\r\n \t   <label>Date</label>\r\n \t   <input type = 'date' min ='2019-01-01' max = '2023-12-31' value={enteredDate} onChange={dateChangeHandler}/>\r\n\r\n\r\n \t   </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n     <button type ='submit'>Add Expense</button>\r\n     </div>\r\n     </form>\r\n \t   );\r\n }\r\n\r\n export default ExpenseForm;","import React,{useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import React,{ useState} from 'react';\nimport './App.css';\nimport Expenses from './components/Expenses';\nimport NewExpense from './components/NewExpense';\n\nconst dummy_expense = [\n    {\n      id: 'e1',\n      title: 'Book',\n      amount: 200,\n      date: new Date(2020, 7, 14),\n    },\n    \n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 2000,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 4050,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n\n  \n  const App = () => {\n    const [expenses, setExpenses] = useState(dummy_expense);\n  \n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n     <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}